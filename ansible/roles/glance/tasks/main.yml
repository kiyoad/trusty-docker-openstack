---
# Install Glance

- name: check Glance running
  shell: docker ps | grep -q {{ glance_docker_image }}
  register: glance_is_running
  ignore_errors: True

- name: make Glance Dockerfile directory
  shell: mkdir -p {{ dockerfile_install_dir }}/glance
  when: glance_is_running|failed

- name: install Glance Dockerfile
  template: src=Dockerfile.j2 dest={{ dockerfile_install_dir }}/glance/Dockerfile
  when: glance_is_running|failed

- name: install service_launcher.sh
  template: src=service_launcher.sh.j2 dest={{ dockerfile_install_dir }}/glance/service_launcher.sh
  when: glance_is_running|failed

- name: install monit.conf(1)
  template: src=monit_glance-api.conf.j2 dest={{ dockerfile_install_dir }}/glance/monit_glance-api.conf
  when: glance_is_running|failed

- name: install monit.conf(2)
  template: src=monit_glance-registry.conf.j2 dest={{ dockerfile_install_dir }}/glance/monit_glance-registry.conf
  when: glance_is_running|failed

- name: build Glance Dockerfile
  shell: docker build -t {{ glance_docker_image }} . > docker_build.log 2>&1
  args:
    chdir: "{{ dockerfile_install_dir }}/glance"
  when: glance_is_running|failed

- name: create log directory
  shell: mkdir -p {{ openstack_log_dir }}/glance && chmod 0777 {{ openstack_log_dir }}/glance
  when: glance_is_running|failed

- name: start Glance
  shell: docker run --name=glance --net=host -v /var/log/openstack/glance:/var/log/glance -d -e GLANCE_DATABASE_IP={{ openstack_database_ip }} -e KEYSTONE_IP={{ keystone_ip }} {{ glance_docker_image }}
  when: glance_is_running|failed

- name: install Glance client
  apt: name=python-glanceclient

- name: check glance user
  shell: keystone --os-username admin --os-password {{ openstack_admin_password }} --os-tenant-name admin --os-auth-url http://{{ keystone_ip }}:35357/v2.0 user-list | grep -q glance
  register: glance_exist
  ignore_errors: True

- name: add glance user,role,service and endpoint
  shell: |
    export OS_USERNAME=admin
    export OS_PASSWORD={{ openstack_admin_password }}
    export OS_TENANT_NAME=admin
    export OS_AUTH_URL=http://{{ keystone_ip }}:35357/v2.0
    keystone user-create --name=glance --pass={{ glance_password }} --email=glance@example.com
    keystone user-role-add --user=glance --tenant=service --role=admin
    keystone service-create --name=glance --type=image --description="OpenStack Image Service"
    keystone endpoint-create --service-id=$(keystone service-list | awk '/ image / {print $2}') --publicurl=http://{{ glance_ip }}:9292 --internalurl=http://{{ glance_ip }}:9292 --adminurl=http://{{ glance_ip }}:9292
  when: glance_exist|failed

- name: create CirrOS download and registration script
  shell: |
    export script_file=/root/get-cirros-and-reg.sh
    echo '#!/bin/bash' >  ${script_file}
    echo 'set -eux'    >> ${script_file}
    echo 'wget http://cdn.download.cirros-cloud.net/0.3.3/cirros-0.3.3-x86_64-disk.img' >> ${script_file}
    echo 'glance image-create --name "cirros-0.3.3-x86_64" --disk-format qcow2 --container-format bare --is-public True --progress < cirros-0.3.3-x86_64-disk.img' >> ${script_file}
    chmod a+x ${script_file}
  when: glance_is_running|failed
