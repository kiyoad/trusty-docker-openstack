---
# Install Glance

- name: install MySQL client
  apt: name=mysql-client

- name: check Glance database
  shell: mysql -h {{ openstack_database_ip }} -uroot -p{{ database_root_password }} -N -s -e "show databases;" | grep -q glance
  register: db_exists
  ignore_errors: True

- name: create initial Glance database
  template: src=init_glance.sql.j2 dest=/tmp/init_glance.sql
  when: db_exists|failed

- name: install initial Glance database
  shell: |
    mysql -h {{ openstack_database_ip }} -uroot -p{{ database_root_password }} -N -s -e "source /tmp/init_glance.sql;"
    rm /tmp/init_glance.sql
  when: db_exists|failed

- name: check Glance running
  shell: docker ps | grep -q {{ glance_docker_image }}
  register: glance_is_running
  ignore_errors: True

- name: make Glance Dockerfile directory
  shell: mkdir -p {{ dockerfile_install_dir }}/glance
  when: glance_is_running|failed

- name: install Glance Dockerfile
  template: src=Dockerfile.j2 dest={{ dockerfile_install_dir }}/glance/Dockerfile
  when: glance_is_running|failed

- name: install service_launcher.sh
  template: src=service_launcher.sh.j2 dest={{ dockerfile_install_dir }}/glance/service_launcher.sh
  when: glance_is_running|failed

- name: install monit_glance-api.conf
  copy: src=monit_glance-api.conf dest={{ dockerfile_install_dir }}/glance/monit_glance-api.conf
  when: glance_is_running|failed

- name: install monit_glance-registry.conf
  copy: src=monit_glance-registry.conf dest={{ dockerfile_install_dir }}/glance/monit_glance-registry.conf
  when: glance_is_running|failed

- name: build Glance Dockerfile
  shell: docker build -t {{ glance_docker_image }} . > docker_build.log 2>&1
  args:
    chdir: "{{ dockerfile_install_dir }}/glance"
  when: glance_is_running|failed

- name: create log directory
  shell: mkdir -p {{ openstack_log_dir }}/glance && chmod 0777 {{ openstack_log_dir }}/glance
  when: glance_is_running|failed

- name: start Glance
  shell: >-
    docker run -d --net=host
    --name=glance
    -v /var/log/openstack/glance:/var/log/glance
    -e MAINTENANCE_PORT={{ glance_maintenance_ssh_port }}
    -e GLANCE_DATABASE_IP={{ openstack_database_ip }}
    -e KEYSTONE_IP={{ keystone_ip }}
    {{ glance_docker_image }}
  when: glance_is_running|failed

- name: install Glance client
  apt: name=python-glanceclient

- name: check glance user
  shell: >-
    keystone
    --os-username admin
    --os-password {{ openstack_admin_password }}
    --os-tenant-name admin
    --os-auth-url http://{{ keystone_ip }}:35357/v2.0
    user-list | grep -q glance
  register: glance_exist
  ignore_errors: True

- name: add glance user,role,service and endpoint
  shell: |
    export OS_USERNAME=admin
    export OS_PASSWORD={{ openstack_admin_password }}
    export OS_TENANT_NAME=admin
    export OS_AUTH_URL=http://{{ keystone_ip }}:35357/v2.0
    keystone user-create --name=glance --pass={{ glance_password }} --email=glance@example.com
    keystone user-role-add --user=glance --tenant=service --role=admin
    keystone service-create --name=glance --type=image --description="OpenStack Image Service"
    keystone endpoint-create --service-id=$(keystone service-list | awk '/ image / {print $2}') --publicurl=http://{{ glance_ip }}:9292 --internalurl=http://{{ glance_ip }}:9292 --adminurl=http://{{ glance_ip }}:9292
  when: glance_exist|failed

- name: install CirrOS download and registration script
  template: src=get-cirros-and-reg.sh.j2 dest=/root/get-cirros-and-reg.sh mode=0755
