---
# Install Keystone

- name: check Keystone running
  shell: docker ps | grep -q {{ keystone_docker_image }}
  register: keystone_is_running
  ignore_errors: True

- name: make Keystone Dockerfile directory
  shell: mkdir -p {{ dockerfile_install_dir }}/keystone
  when: keystone_is_running|failed

- name: install Keystone Dockerfile
  template: src=Dockerfile.j2 dest={{ dockerfile_install_dir }}/keystone/Dockerfile
  when: keystone_is_running|failed

- name: install service_launcher.sh
  template: src=service_launcher.sh.j2 dest={{ dockerfile_install_dir }}/keystone/service_launcher.sh
  when: keystone_is_running|failed

- name: install monit.conf(1)
  template: src=monit_keystone.conf.j2 dest={{ dockerfile_install_dir }}/keystone/monit_keystone.conf
  when: keystone_is_running|failed

- name: install monit.conf(2)
  template: src=monit_openssh-server.conf.j2 dest={{ dockerfile_install_dir }}/keystone/monit_openssh-server.conf
  when: keystone_is_running|failed

- name: install maintenance ssh config
  template: src=sshd_config.j2 dest={{ dockerfile_install_dir }}/keystone/sshd_config
  when: keystone_is_running|failed

- name: build Keystone Dockerfile
  shell: docker build -t {{ keystone_docker_image }} . > docker_build.log 2>&1
  args:
    chdir: "{{ dockerfile_install_dir }}/keystone"
  when: keystone_is_running|failed

- name: create log directory
  shell: mkdir -p {{ openstack_log_dir }}/keystone && chmod 0777 {{ openstack_log_dir }}/keystone
  when: keystone_is_running|failed

- name: start Keystone
  shell: docker run --name=keystone --net=host -v /var/log/openstack/keystone:/var/log/keystone -d -e KEYSTONE_DATABASE_IP={{ openstack_database_ip }} {{ keystone_docker_image }}
  when: keystone_is_running|failed

- name: wait Keystone
  shell: sleep 10
  when: keystone_is_running|failed

- name: install Keystone client
  apt: name=python-keystoneclient

- name: check admin user
  shell: keystone --os-token {{ keystone_admin_token }} --os-endpoint http://{{ keystone_ip }}:35357/v2.0 user-list | grep -q admin
  register: admin_exist
  ignore_errors: True

- name: add admin,guest and service tenant info
  shell: |
     export OS_SERVICE_TOKEN={{ keystone_admin_token }}
     export OS_SERVICE_ENDPOINT=http://{{ keystone_ip }}:35357/v2.0
     keystone user-create --name=admin --pass={{ openstack_admin_password }} --email=admin@example.com
     keystone role-create --name=admin
     keystone tenant-create --name=admin --description="Admin Tenant"
     keystone user-role-add --user=admin --tenant=admin --role=admin
     keystone user-role-add --user=admin --role=_member_ --tenant=admin
     keystone user-create --name=demo --pass={{ openstack_demo_password }} --email=demo@example.com
     keystone tenant-create --name=demo --description="Demo Tenant"
     keystone user-role-add --user=demo --role=_member_ --tenant=demo
     keystone tenant-create --name=service --description="Service Tenant"
     keystone service-create --name=keystone --type=identity --description="OpenStack Identity"
     keystone endpoint-create --service-id=$(keystone service-list | awk '/ identity / {print $2}') --publicurl=http://{{ keystone_ip }}:5000/v2.0 --internalurl=http://{{ keystone_ip }}:5000/v2.0 --adminurl=http://{{ keystone_ip }}:35357/v2.0
  when: admin_exist|failed

- name: create environment variables for admin
  shell: |
    export env_file=/root/admin-openstack.sh
    echo "export OS_USERNAME=admin"                               >  ${env_file}
    echo "export OS_PASSWORD={{ openstack_admin_password }}"      >> ${env_file}
    echo "export OS_TENANT_NAME=admin"                            >> ${env_file}
    echo "export OS_AUTH_URL=http://{{ keystone_ip }}:35357/v2.0" >> ${env_file}
  when: admin_exist|failed

- name: create environment variables for demo
  shell: |
    export env_file=/root/demo-openstack.sh
    echo "export OS_USERNAME=demo"                                >  ${env_file}
    echo "export OS_PASSWORD={{ openstack_demo_password }}"       >> ${env_file}
    echo "export OS_TENANT_NAME=demo"                             >> ${env_file}
    echo "export OS_AUTH_URL=http://{{ keystone_ip }}:35357/v2.0" >> ${env_file}
  when: admin_exist|failed
